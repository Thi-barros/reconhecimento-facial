{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api'; // Replace with your backend API URL\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport let AccessLevel = /*#__PURE__*/function (AccessLevel) {\n  AccessLevel[\"BASICO\"] = \"BASICO\";\n  AccessLevel[\"INTERMEDIARIO\"] = \"INTERMEDIARIO\";\n  AccessLevel[\"TOTAL\"] = \"TOTAL\";\n  return AccessLevel;\n}({});\nexport let DocumentLevel = /*#__PURE__*/function (DocumentLevel) {\n  DocumentLevel[\"LIVRE\"] = \"LIVRE\";\n  DocumentLevel[\"RESTRITO\"] = \"RESTRITO\";\n  DocumentLevel[\"CONFIDENCIAL\"] = \"CONFIDENCIAL\";\n  return DocumentLevel;\n}({});\nexport const apiService = {\n  getUsers: async () => {\n    const response = await api.get('/users');\n    return response.data;\n  },\n  registerUser: async (name, email, accessLevel, imageFile) => {\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('access_level', accessLevel);\n    formData.append('image', imageFile);\n    const response = await api.post('/users/register', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  async updateUser(userId, updateData) {\n    const response = await api.put('/users/${userId}', updateData);\n    return response.data;\n  },\n  async deleteUser(userId) {\n    await api.delete(`/users/${userId}`);\n  },\n  async checkAccess(imageFile) {\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    const response = await api.post('/access/check', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  async checkAccessCamera() {\n    const response = await api.get('/access/check_camera');\n    return response.data;\n  },\n  //Documentos\n  async uploadDocuments(title, description, documentLevel, uploaderEmail, file) {\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('document_level', documentLevel);\n    formData.append('uploader_email', uploaderEmail);\n    formData.append('file', file);\n    const response = await api.post('documents/upload', formData, {\n      headers: {\n        'Content-type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  async getDocuments(userEmail) {\n    const response = await api.get('/documents?user_email=${user_email}');\n    return response.data;\n  },\n  async downloadDocument(documentId, userEmail) {\n    const response = await api.get('/documents/${documentId}/download?user_email=${user_email}', {\n      responseType: 'blob'\n    });\n    return response.data;\n  },\n  async getDocumentsLevel() {\n    const response = await api.get('/documents/levels');\n    return response.data;\n  },\n  async getAccessLogs(limit = 50) {\n    const response = await api.get(`/access/logs?limit=${limit}`);\n    return response.data;\n  },\n  async getStats() {\n    const response = await api.get('/stats');\n    return response.data;\n  },\n  async healthCheck() {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","AccessLevel","DocumentLevel","apiService","getUsers","response","get","data","registerUser","name","email","accessLevel","imageFile","formData","FormData","append","post","updateUser","userId","updateData","put","deleteUser","delete","checkAccess","checkAccessCamera","uploadDocuments","title","description","documentLevel","uploaderEmail","file","getDocuments","userEmail","downloadDocument","documentId","responseType","getDocumentsLevel","getAccessLogs","limit","getStats","healthCheck"],"sources":["C:/Users/ASUS/Documents/Thiago/UNIP/APS-6-semestre/facial-access-control/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000/api'; // Replace with your backend API URL\r\n\r\nconst api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport enum AccessLevel{\r\n\r\n    BASICO = 'BASICO',\r\n    INTERMEDIARIO = 'INTERMEDIARIO',\r\n    TOTAL = 'TOTAL'\r\n}\r\n\r\nexport enum DocumentLevel{\r\n    LIVRE = 'LIVRE',\r\n    RESTRITO= 'RESTRITO',\r\n    CONFIDENCIAL = 'CONFIDENCIAL'\r\n}\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n    access_level: AccessLevel;\r\n    created_at: string;\r\n    is_active: boolean;\r\n}\r\n\r\nexport interface UserUpdate{\r\n    name?: string;\r\n    access_level?: AccessLevel;\r\n    is_active?: boolean;\r\n}\r\n\r\nexport interface Document {\r\n    id: number;\r\n    title: string;\r\n    filename: string;\r\n    description?: string;\r\n    document_level: DocumentLevel;\r\n    file_path: string;\r\n    uploaded_at: string;\r\n    uploaded_by: number;\r\n}\r\n\r\nexport interface DocumentAccessResponse{\r\n    documents: Document[];\r\n    user_access_level: AccessLevel;\r\n    total_available: number;\r\n}\r\n\r\n\r\nexport interface AccessResponse {\r\n    access_granted: boolean;\r\n    user_name?: string | null;\r\n    message: string;\r\n    confidence_score?: number | null;\r\n    access_level?: AccessLevel;\r\n}\r\n\r\nexport interface AccessLog {\r\n    id: number;\r\n    user_name: string | null;\r\n    access_granted: boolean;\r\n    timestamp: string;\r\n    confidence_score: string | null;\r\n}\r\n\r\nexport interface Stats {\r\n    total_authorized_users: number;\r\n    total_access_attempts: number;\r\n    granted_attempts: number;\r\n    denied_attempts: number;\r\n    success_rate: number;\r\n}\r\n\r\nexport interface LevelInfo{\r\n    value: string;\r\n    label: string;\r\n    description: string;\r\n}\r\n\r\nexport interface LevelsResponse{\r\n    document_levels: LevelInfo[];\r\n    access_levels: LevelInfo[];\r\n}\r\n\r\nexport const apiService = {\r\n     getUsers: async (): Promise<User[]> => {\r\n        const response = await api.get<User[]>('/users');\r\n        return response.data;\r\n    },\r\n     registerUser: async (name: string, email: string, accessLevel: AccessLevel, imageFile: File): Promise<User> => {\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('email', email);\r\n        formData.append('access_level', accessLevel);\r\n        formData.append('image', imageFile);\r\n\r\n        const response = await api.post<User>('/users/register', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n        return response.data;\r\n    },\r\n\r\n    async updateUser(userId: number, updateData: UserUpdate):Promise<User> {\r\n        const response = await api.put('/users/${userId}', updateData);\r\n        return response.data;\r\n    },\r\n\r\n    async deleteUser(userId: number): Promise<void> {\r\n        await api.delete(`/users/${userId}`);\r\n    },\r\n\r\n\r\n    async checkAccess(imageFile: File): Promise<AccessResponse> {\r\n        const formData = new FormData();\r\n        formData.append('image', imageFile);\r\n\r\n        const response = await api.post<AccessResponse>('/access/check', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data', \r\n            },\r\n        });\r\n        return response.data;\r\n    },\r\n\r\n    async checkAccessCamera(): Promise<AccessResponse> {\r\n        const response = await api.get<AccessResponse>('/access/check_camera');\r\n        return response.data;\r\n    },\r\n    \r\n    //Documentos\r\n    async uploadDocuments(\r\n        title: string,\r\n        description: string,\r\n        documentLevel: DocumentLevel,\r\n        uploaderEmail: string,\r\n        file: File\r\n    ): Promise<Document> {\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('description', description);\r\n        formData.append('document_level', documentLevel);\r\n        formData.append('uploader_email', uploaderEmail);\r\n        formData.append('file', file);\r\n\r\n         const response = await api.post('documents/upload', formData, {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data',\r\n            },\r\n         });\r\n         return response.data;\r\n    },\r\n\r\n    async getDocuments(userEmail: string): Promise<DocumentAccessResponse> {\r\n        const response = await api.get('/documents?user_email=${user_email}');\r\n        return response.data;\r\n    },\r\n\r\n    async downloadDocument(documentId: number, userEmail: string): Promise<Blob>{\r\n        const response = await api.get('/documents/${documentId}/download?user_email=${user_email}',{\r\n            responseType: 'blob',\r\n        });\r\n        return response.data;\r\n    },\r\n    async getDocumentsLevel(): Promise<LevelsResponse> {\r\n        const response = await api.get('/documents/levels');\r\n        return response.data;\r\n    },\r\n\r\n    async getAccessLogs(limit: number = 50): Promise<AccessLog[]> {\r\n        const response = await api.get<AccessLog[]>(`/access/logs?limit=${limit}`);\r\n        return response.data;\r\n    },\r\n\r\n    async getStats(): Promise<Stats> {\r\n        const response = await api.get<Stats>('/stats');\r\n        return response.data;\r\n    },\r\n\r\n    async healthCheck(): Promise<any> {\r\n        const response = await api.get('/health');\r\n        return response.data;\r\n    },\r\n};\r\n\r\nexport default apiService;\r\n        \r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,WAAYC,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAOvB,WAAYC,aAAa,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AA0EzB,OAAO,MAAMC,UAAU,GAAG;EACrBC,QAAQ,EAAE,MAAAA,CAAA,KAA6B;IACpC,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAS,QAAQ,CAAC;IAChD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EACAC,YAAY,EAAE,MAAAA,CAAOC,IAAY,EAAEC,KAAa,EAAEC,WAAwB,EAAEC,SAAe,KAAoB;IAC5G,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,IAAI,CAAC;IAC7BI,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,KAAK,CAAC;IAC/BG,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEJ,WAAW,CAAC;IAC5CE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAAC;IAEnC,MAAMP,QAAQ,GAAG,MAAMR,GAAG,CAACmB,IAAI,CAAO,iBAAiB,EAAEH,QAAQ,EAAE;MAC/Db,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOK,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMU,UAAUA,CAACC,MAAc,EAAEC,UAAsB,EAAgB;IACnE,MAAMd,QAAQ,GAAG,MAAMR,GAAG,CAACuB,GAAG,CAAC,kBAAkB,EAAED,UAAU,CAAC;IAC9D,OAAOd,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMc,UAAUA,CAACH,MAAc,EAAiB;IAC5C,MAAMrB,GAAG,CAACyB,MAAM,CAAC,UAAUJ,MAAM,EAAE,CAAC;EACxC,CAAC;EAGD,MAAMK,WAAWA,CAACX,SAAe,EAA2B;IACxD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAAC;IAEnC,MAAMP,QAAQ,GAAG,MAAMR,GAAG,CAACmB,IAAI,CAAiB,eAAe,EAAEH,QAAQ,EAAE;MACvEb,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOK,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMiB,iBAAiBA,CAAA,EAA4B;IAC/C,MAAMnB,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAiB,sBAAsB,CAAC;IACtE,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACA,MAAMkB,eAAeA,CACjBC,KAAa,EACbC,WAAmB,EACnBC,aAA4B,EAC5BC,aAAqB,EACrBC,IAAU,EACO;IACjB,MAAMjB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEW,KAAK,CAAC;IAC/Bb,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEY,WAAW,CAAC;IAC3Cd,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEa,aAAa,CAAC;IAChDf,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEc,aAAa,CAAC;IAChDhB,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEe,IAAI,CAAC;IAE5B,MAAMzB,QAAQ,GAAG,MAAMR,GAAG,CAACmB,IAAI,CAAC,kBAAkB,EAAEH,QAAQ,EAAE;MAC3Db,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACH,CAAC,CAAC;IACF,OAAOK,QAAQ,CAACE,IAAI;EACzB,CAAC;EAED,MAAMwB,YAAYA,CAACC,SAAiB,EAAmC;IACnE,MAAM3B,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,qCAAqC,CAAC;IACrE,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAM0B,gBAAgBA,CAACC,UAAkB,EAAEF,SAAiB,EAAgB;IACxE,MAAM3B,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,4DAA4D,EAAC;MACxF6B,YAAY,EAAE;IAClB,CAAC,CAAC;IACF,OAAO9B,QAAQ,CAACE,IAAI;EACxB,CAAC;EACD,MAAM6B,iBAAiBA,CAAA,EAA4B;IAC/C,MAAM/B,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAM8B,aAAaA,CAACC,KAAa,GAAG,EAAE,EAAwB;IAC1D,MAAMjC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAc,sBAAsBgC,KAAK,EAAE,CAAC;IAC1E,OAAOjC,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMgC,QAAQA,CAAA,EAAmB;IAC7B,MAAMlC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAQ,QAAQ,CAAC;IAC/C,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMiC,WAAWA,CAAA,EAAiB;IAC9B,MAAMnC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACxB;AACJ,CAAC;AAED,eAAeJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}