{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api'; // Replace with your backend API URL\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const apiService = {\n  getUsers: async () => {\n    const response = await api.get('/users');\n    return response.data;\n  },\n  registerUser: async (name, email, imageFile) => {\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('image', imageFile);\n    const response = await api.post('/users/register', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  async deleteUser(userId) {\n    await api.delete(`/users/${userId}`);\n  },\n  async checkAccess(imageFile) {\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    const response = await api.post('/access/check', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  async checkAccessCamera() {\n    const response = await api.get('/access/check_camera');\n    return response.data;\n  },\n  async getAccessLogs(limit = 50) {\n    const response = await api.get(`/access/logs?limit=${limit}`);\n    return response.data;\n  },\n  async getStats() {\n    const response = await api.get('/stats');\n    return response.data;\n  },\n  async healthCheck() {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","apiService","getUsers","response","get","data","registerUser","name","email","imageFile","formData","FormData","append","post","deleteUser","userId","delete","checkAccess","checkAccessCamera","getAccessLogs","limit","getStats","healthCheck"],"sources":["C:/Users/ASUS/Documents/Thiago/UNIP/APS-6-semestre/facial-access-control/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000/api'; // Replace with your backend API URL\r\n\r\nconst api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n    created_at: string;\r\n    is_active: boolean;\r\n}\r\n\r\nexport interface AccessResponse {\r\n    access_granted: boolean;\r\n    user_name?: string | null;\r\n    message: string;\r\n    confidence_score?: number | null;\r\n}\r\n\r\nexport interface AccessLog {\r\n    id: number;\r\n    user_name: string | null;\r\n    access_granted: boolean;\r\n    timestamp: string;\r\n    confidence_score: string | null;\r\n}\r\n\r\nexport interface Stats {\r\n    total_authorized_users: number;\r\n    total_access_attempts: number;\r\n    granted_attempsts: number;\r\n    denied_attempts: number;\r\n    success_rate: number;\r\n}\r\n\r\nexport const apiService = {\r\n     getUsers: async (): Promise<User[]> => {\r\n        const response = await api.get<User[]>('/users');\r\n        return response.data;\r\n    },\r\n     registerUser: async (name: string, email: string, imageFile: File): Promise<User> => {\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('email', email);\r\n        formData.append('image', imageFile);\r\n\r\n        const response = await api.post<User>('/users/register', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n        return response.data;\r\n    },\r\n\r\n    async deleteUser(userId: number): Promise<void> {\r\n        await api.delete(`/users/${userId}`);\r\n    },\r\n\r\n\r\n    async checkAccess(imageFile: File): Promise<AccessResponse> {\r\n        const formData = new FormData();\r\n        formData.append('image', imageFile);\r\n\r\n        const response = await api.post<AccessResponse>('/access/check', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data', \r\n            },\r\n        });\r\n        return response.data;\r\n    },\r\n\r\n    async checkAccessCamera(): Promise<AccessResponse> {\r\n        const response = await api.get<AccessResponse>('/access/check_camera');\r\n        return response.data;\r\n    },\r\n\r\n    async getAccessLogs(limit: number = 50): Promise<AccessLog[]> {\r\n        const response = await api.get<AccessLog[]>(`/access/logs?limit=${limit}`);\r\n        return response.data;\r\n    },\r\n\r\n    async getStats(): Promise<Stats> {\r\n        const response = await api.get<Stats>('/stats');\r\n        return response.data;\r\n    },\r\n\r\n    async healthCheck(): Promise<any> {\r\n        const response = await api.get('/health');\r\n        return response.data;\r\n    },\r\n};\r\n\r\nexport default apiService;\r\n        \r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAiCF,OAAO,MAAMC,UAAU,GAAG;EACrBC,QAAQ,EAAE,MAAAA,CAAA,KAA6B;IACpC,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAS,QAAQ,CAAC;IAChD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EACAC,YAAY,EAAE,MAAAA,CAAOC,IAAY,EAAEC,KAAa,EAAEC,SAAe,KAAoB;IAClF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;IAC7BG,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;IAC/BE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAAC;IAEnC,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACgB,IAAI,CAAO,iBAAiB,EAAEH,QAAQ,EAAE;MAC/DV,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMS,UAAUA,CAACC,MAAc,EAAiB;IAC5C,MAAMlB,GAAG,CAACmB,MAAM,CAAC,UAAUD,MAAM,EAAE,CAAC;EACxC,CAAC;EAGD,MAAME,WAAWA,CAACR,SAAe,EAA2B;IACxD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAAC;IAEnC,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACgB,IAAI,CAAiB,eAAe,EAAEH,QAAQ,EAAE;MACvEV,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMa,iBAAiBA,CAAA,EAA4B;IAC/C,MAAMf,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAiB,sBAAsB,CAAC;IACtE,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMc,aAAaA,CAACC,KAAa,GAAG,EAAE,EAAwB;IAC1D,MAAMjB,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAc,sBAAsBgB,KAAK,EAAE,CAAC;IAC1E,OAAOjB,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMgB,QAAQA,CAAA,EAAmB;IAC7B,MAAMlB,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAQ,QAAQ,CAAC;IAC/C,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMiB,WAAWA,CAAA,EAAiB;IAC9B,MAAMnB,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACxB;AACJ,CAAC;AAED,eAAeJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}