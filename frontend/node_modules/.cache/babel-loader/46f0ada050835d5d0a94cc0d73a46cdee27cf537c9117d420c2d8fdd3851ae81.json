{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\Thiago\\\\UNIP\\\\APS-6-semestre\\\\facial-access-control\\\\frontend\\\\src\\\\components\\\\CameraAccess.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport { Box, Card, CardContent, Typography, Button, Alert, CircularProgress, Chip } from '@mui/material';\nimport { CameraAlt, CheckCircle, Cancel } from '@mui/icons-material';\nimport { apiService } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CameraAccess = ({\n  onAccessResult\n}) => {\n  _s();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [lastResult, setLastResult] = useState(null);\n  const [error, setError] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [stream, setStream] = useState(null);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const startCamera = useCallback(async () => {\n    try {\n      setError(null);\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 640,\n          height: 480\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = mediaStream;\n        setStream(mediaStream);\n        setIsCameraActive(true);\n      }\n    } catch (err) {\n      setError('Erro ao acessar a câmera. Verifique as permissões.');\n      console.error('Erro ao acessar câmera:', err);\n    }\n  }, []);\n  const stopCamera = useCallback(() => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      setStream(null);\n      setIsCameraActive(false);\n    }\n  }, [stream]);\n  const captureImage = useCallback(() => {\n    return new Promise(resolve => {\n      if (!videoRef.current || !canvasRef.current) {\n        resolve(null);\n        return;\n      }\n      const canvas = canvasRef.current;\n      const video = videoRef.current;\n      const context = canvas.getContext('2d');\n      if (!context) {\n        resolve(null);\n        return;\n      }\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      canvas.toBlob(blob => {\n        if (blob) {\n          const file = new File([blob], 'camera-capture.jpg', {\n            type: 'image/jpeg'\n          });\n          resolve(file);\n        } else {\n          resolve(null);\n        }\n      }, 'image/jpeg', 0.8);\n    });\n  }, []);\n  const checkAccess = useCallback(async () => {\n    if (!isCameraActive) {\n      setError('Ative a câmera primeiro');\n      return;\n    }\n    setIsProcessing(true);\n    setError(null);\n    try {\n      const imageFile = await captureImage();\n      if (!imageFile) {\n        throw new Error('Não foi possível capturar a imagem');\n      }\n      const result = await apiService.checkAccess(imageFile);\n      setLastResult(result);\n      onAccessResult === null || onAccessResult === void 0 ? void 0 : onAccessResult(result);\n    } catch (err) {\n      setError(err.message || 'Erro ao verificar acesso');\n      console.error('Erro na verificação:', err);\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [isCameraActive, captureImage, onAccessResult]);\n  const getResultIcon = () => {\n    if (!lastResult) return null;\n    return lastResult.access_granted ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n      sx: {\n        color: 'success.main',\n        fontSize: 40\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Cancel, {\n      sx: {\n        color: 'error.main',\n        fontSize: 40\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  };\n  const getResultColor = () => {\n    if (!lastResult) return 'default';\n    return lastResult.access_granted ? 'success' : 'error';\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 500,\n      margin: 'auto',\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: \"Controle de Acesso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'relative',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          muted: true,\n          width: 480,\n          height: 360,\n          style: {\n            borderRadius: 8,\n            backgroundColor: '#f0f0f0',\n            display: isCameraActive ? 'block' : 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), !isCameraActive && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 480,\n            height: 360,\n            backgroundColor: '#fefefe',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 2,\n            border: '2px dashed #ccc'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"textSecondary\",\n            children: \"C\\xE2mera inativa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          justifyContent: 'center',\n          mb: 2\n        },\n        children: [!isCameraActive ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(CameraAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 40\n          }, this),\n          onClick: startCamera,\n          size: \"large\",\n          children: \"Ativar C\\xE2mera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: stopCamera,\n          size: \"large\",\n          children: \"Parar C\\xE2mera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: checkAccess,\n          disabled: isProcessing || !isCameraActive,\n          size: \"large\",\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20,\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this), \"Verificando...\"]\n          }, void 0, true) : 'Verificar Acesso'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), lastResult && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          mt: 2\n        },\n        children: [getResultIcon(), /*#__PURE__*/_jsxDEV(Chip, {\n          label: lastResult.access_granted ? 'ACESSO LIBERADO' : 'ACESSO NEGADO',\n          color: getResultColor(),\n          sx: {\n            fontSize: 18,\n            mb: 1,\n            mt: 1,\n            px: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: [\"Confian\\xE7a: \", lastResult.confidence_score !== undefined && lastResult.confidence_score !== null ? Number(lastResult.confidence_score).toFixed(1) : 'N/A', \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: lastResult.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 2\n        },\n        onClose: () => setError(null),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraAccess, \"TCMx2fy7w/IbyQuoZLgboKTod7k=\");\n_c = CameraAccess;\nexport default CameraAccess;\nvar _c;\n$RefreshReg$(_c, \"CameraAccess\");","map":{"version":3,"names":["React","useState","useRef","useCallback","Box","Card","CardContent","Typography","Button","Alert","CircularProgress","Chip","CameraAlt","CheckCircle","Cancel","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraAccess","onAccessResult","_s","isProcessing","setIsProcessing","lastResult","setLastResult","error","setError","videoRef","canvasRef","stream","setStream","isCameraActive","setIsCameraActive","startCamera","mediaStream","navigator","mediaDevices","getUserMedia","video","width","height","current","srcObject","err","console","stopCamera","getTracks","forEach","track","stop","captureImage","Promise","resolve","canvas","context","getContext","videoWidth","videoHeight","drawImage","toBlob","blob","file","File","type","checkAccess","imageFile","Error","result","message","getResultIcon","access_granted","sx","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","getResultColor","maxWidth","margin","mt","children","variant","component","gutterBottom","position","mb","ref","autoPlay","muted","style","borderRadius","backgroundColor","display","alignItems","justifyContent","border","gap","startIcon","onClick","size","disabled","mr","flexDirection","label","px","confidence_score","undefined","Number","toFixed","severity","onClose","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/Thiago/UNIP/APS-6-semestre/facial-access-control/frontend/src/components/CameraAccess.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    Button,\r\n    Alert,\r\n    CircularProgress,\r\n    Chip,\r\n} from '@mui/material';\r\nimport { CameraAlt, CheckCircle, Cancel } from '@mui/icons-material';\r\nimport { apiService, AccessResponse } from '../services/api';\r\n\r\ninterface CameraAccessProps {\r\n    onAccessResult?: (result: AccessResponse) => void;\r\n}\r\n\r\nconst CameraAccess: React.FC<CameraAccessProps> = ({ onAccessResult }) => {\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [lastResult, setLastResult] = useState<AccessResponse | null>(null);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const [stream, setStream] = useState<MediaStream | null>(null);\r\n    const [isCameraActive, setIsCameraActive] = useState(false);\r\n\r\n    const startCamera = useCallback(async () => {\r\n        try {\r\n            setError(null);\r\n            const mediaStream = await navigator.mediaDevices.getUserMedia({\r\n                video: { width: 640, height: 480 },\r\n            });\r\n            if (videoRef.current) {\r\n                videoRef.current.srcObject = mediaStream;\r\n                setStream(mediaStream);\r\n                setIsCameraActive(true);\r\n            }\r\n        } catch (err) {\r\n            setError('Erro ao acessar a câmera. Verifique as permissões.');\r\n            console.error('Erro ao acessar câmera:', err);\r\n        }\r\n    }, []);\r\n\r\n    const stopCamera = useCallback(() => {\r\n        if (stream) {\r\n            stream.getTracks().forEach((track) => track.stop());\r\n            setStream(null);\r\n            setIsCameraActive(false);\r\n        }\r\n    }, [stream]);\r\n\r\n    const captureImage = useCallback((): Promise<File | null> => {\r\n        return new Promise((resolve) => {\r\n            if (!videoRef.current || !canvasRef.current) {\r\n                resolve(null);\r\n                return;\r\n            }\r\n            const canvas = canvasRef.current;\r\n            const video = videoRef.current;\r\n            const context = canvas.getContext('2d');\r\n            if (!context) {\r\n                resolve(null);\r\n                return;\r\n            }\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            canvas.toBlob((blob) => {\r\n                if (blob) {\r\n                    const file = new File([blob], 'camera-capture.jpg', { type: 'image/jpeg' });\r\n                    resolve(file);\r\n                } else {\r\n                    resolve(null);\r\n                }\r\n            }, 'image/jpeg', 0.8);\r\n        });\r\n    }, []);\r\n\r\n    const checkAccess = useCallback(async () => {\r\n        if (!isCameraActive) {\r\n            setError('Ative a câmera primeiro');\r\n            return;\r\n        }\r\n        setIsProcessing(true);\r\n        setError(null);\r\n        try {\r\n            const imageFile = await captureImage();\r\n            if (!imageFile) {\r\n                throw new Error('Não foi possível capturar a imagem');\r\n            }\r\n            const result = await apiService.checkAccess(imageFile);\r\n            setLastResult(result);\r\n            onAccessResult?.(result);\r\n        } catch (err: any) {\r\n            setError(err.message || 'Erro ao verificar acesso');\r\n            console.error('Erro na verificação:', err);\r\n        } finally {\r\n            setIsProcessing(false);\r\n        }\r\n    }, [isCameraActive, captureImage, onAccessResult]);\r\n\r\n    const getResultIcon = () => {\r\n        if (!lastResult) return null;\r\n        return lastResult.access_granted ? (\r\n            <CheckCircle sx={{ color: 'success.main', fontSize: 40 }} />\r\n        ) : (\r\n            <Cancel sx={{ color: 'error.main', fontSize: 40 }} />\r\n        );\r\n    };\r\n\r\n    const getResultColor = () => {\r\n        if (!lastResult) return 'default';\r\n        return lastResult.access_granted ? 'success' : 'error';\r\n    };\r\n\r\n    return (\r\n        <Card sx={{ maxWidth: 500, margin: 'auto', mt: 4 }}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    Controle de Acesso\r\n                </Typography>\r\n                <Box sx={{ position: 'relative', mb: 2 }}>\r\n                    <video\r\n                        ref={videoRef}\r\n                        autoPlay\r\n                        muted\r\n                        width={480}\r\n                        height={360}\r\n                        style={{ borderRadius: 8, backgroundColor: '#f0f0f0', display: isCameraActive ? 'block' : 'none' }}\r\n                    />\r\n                    <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n                    {!isCameraActive && (\r\n                        <Box\r\n                            sx={{\r\n                                width: 480,\r\n                                height: 360,\r\n                                backgroundColor: '#fefefe',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                borderRadius: 2,\r\n                                border: '2px dashed #ccc',\r\n                            }}\r\n                        >\r\n                            <Typography variant=\"body1\" color=\"textSecondary\">\r\n                                Câmera inativa\r\n                            </Typography>\r\n                        </Box>\r\n                    )}\r\n                </Box>\r\n                {/* Controles */}\r\n                <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', mb: 2 }}>\r\n                    {!isCameraActive ? (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            startIcon={<CameraAlt />}\r\n                            onClick={startCamera}\r\n                            size=\"large\"\r\n                        >\r\n                            Ativar Câmera\r\n                        </Button>\r\n                    ) : (\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            onClick={stopCamera}\r\n                            size=\"large\"\r\n                        >\r\n                            Parar Câmera\r\n                        </Button>\r\n                    )}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={checkAccess}\r\n                        disabled={isProcessing || !isCameraActive}\r\n                        size=\"large\"\r\n                    >\r\n                        {isProcessing ? (\r\n                            <>\r\n                                <CircularProgress size={20} sx={{ mr: 1 }} />\r\n                                Verificando...\r\n                            </>\r\n                        ) : (\r\n                            'Verificar Acesso'\r\n                        )}\r\n                    </Button>\r\n                </Box>\r\n                {/* Resultado */}\r\n                {lastResult && (\r\n                    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 2 }}>\r\n                        {getResultIcon()}\r\n                        <Chip\r\n                            label={lastResult.access_granted ? 'ACESSO LIBERADO' : 'ACESSO NEGADO'}\r\n                            color={getResultColor() as any}\r\n                            sx={{ fontSize: 18, mb: 1, mt: 1, px: 2 }}\r\n                        />\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                            Confiança: {\r\n                            lastResult.confidence_score !== undefined && lastResult.confidence_score !== null\r\n                            ? Number(lastResult.confidence_score).toFixed(1)\r\n                            : 'N/A'\r\n                            }%\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                            {lastResult.message}\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n                {error && (\r\n                    <Alert severity=\"error\" sx={{ mt: 2 }} onClose={() => setError(null)}>\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CameraAccess;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}